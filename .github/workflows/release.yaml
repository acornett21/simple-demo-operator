name: 'Build and Publish Bundle'

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-alpha[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-beta[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-rc[0-9]+'

env:
  CONTROLLER_IMAGE_NAME: simple-demo-operator
  BUNDLE_IMAGE_NAME: simple-demo-operator-bundle
jobs:
  release-assets:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set Env Tags
      run: echo RELEASE_TAG=$(echo $GITHUB_REF | cut -d '/' -f 3) >> $GITHUB_ENV

    - name: Log in to Quay.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ env.REGISTRY_USERNAME }}
        password: ${{ env.REGISTRY_PASSWORD }}
        registry: quay.io

    # The controller should already exists at a tag matching the commit hash.
    # Apply the release tag to this controller.
    - name: Apply a release tag to existing controller image.
      run: |
        skopeo login quay.io -u ${{ secrets.REGISTRY_USERNAME }}
        skopeo copy quay.io/${{ secrets.IMAGE_REPOSITORY }}/${{ env.CONTROLLER_IMAGE_NAME }}:${{ github.sha }} quay.io/${{ secrets.IMAGE_REPOSITORY }}/${{ env.CONTROLLER_IMAGE_NAME }}:${{ env.RELEASE_TAG }}

    - name: Pin controller images before bundling
      run: |
        make pin-controller-digest

    - name: Build bundle image
      id: build-bundle-images
      uses: redhat-actions/buildah-build@v2 
      with:
        image: ${{ env.BUNDLE_IMAGE_NAME }}
        tags: v${{ env.RELEASE_TAG }} # Note: "v" prefixed!
        containerfiles: |
          ./bundle.Dockerfile

    - name: Push to target push registry.
      id: push-bundle-img-to-registry
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ env.BUNDLE_IMAGE_NAME }}
        tags: v${{ env.RELEASE_TAG }} # Note: "v" prefixed!
        registry: quay.io/${{ secrets.IMAGE_REPOSITORY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}